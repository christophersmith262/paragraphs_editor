<?php

/**
 * @file
 * Provides preprocess logic for example paragraph types.
 */

use Drupal\Component\Utility\Html;
use Drupal\paragraphs_editor\Utility\RenderUtility;

/**
 * Implements hook_theme_registry_alter().
 */
function paragraphs_editor_examples_theme_registry_alter(&$theme_registry) {
  // This hook would not be necessary if the preprocess hooks were implemented
  // in the theme layer.
  $template_path = drupal_get_path('module', 'paragraphs_editor_examples') . '/templates';
  $theme_registry['paragraph__tabs'] = $theme_registry['paragraph'];
  $theme_registry['paragraph__tabs']['template'] = 'paragraph--tabs';
  $theme_registry['paragraph__tabs']['path'] = $template_path;
  $theme_registry['paragraph__tabs']['preprocess functions'][] = 'paragraphs_editor_examples_preprocess_paragraph__tabs';
}

/**
 * Implements hook_preprocess_paragraph__tabs().
 */
function paragraphs_editor_examples_preprocess_paragraph__tabs(array &$variables) {
  // Attach the tab javascript.
  $variables['#attached']['library'][] = 'paragraphs_editor_examples/tabs';

  // Use the tabs entity to build the content to be rendered.
  $tabs = $variables['elements']['#paragraph'];
  foreach ($tabs->field_tabs as $delta => $tab) {
    $variables['tabs'][$delta] = [
      'id' => Html::getUniqueId('tabs-' . $delta),
      'link' => [
        'title' => $tab->entity->field_title->value,
      ],
    ];

    // Attach inline editing data to the tab. We have to do this since we aren't
    // going to directly render the 'field_content' field in the twig template.
    $editable = RenderUtility::getEditableData($variables, $tab->entity->field_content);
    if (!empty($editable)) {
      $editable->preprocessField($variables['tabs'][$delta]);
    }
    else {
      $variables['tabs'][$delta]['content'] = $tab->entity->field_content->view([
        'type' => 'entity_reference_paragraphs_editor',
        'label' => 'hidden',
      ]);
    }
  }
}
